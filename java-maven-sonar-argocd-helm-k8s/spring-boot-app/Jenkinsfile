pipeline {
    agent any
    tools {
        maven 'maven'
        jdk 'openjdk'
    }

    environment {
        DATE = new Date().format('yy.M')
        TAG = "${DATE}.${BUILD_NUMBER}"
    }

    stages {
        stage ('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/priyankagiri812/CICDProject.git'
            }
        }

        stage ('Build & Test') {
            steps {
                bat 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            steps {
                withSonarQubeEnv('sonarqube') {
                bat 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.projectKey=ultimate-CICD-Pipeline -Dsonar.host.url=http://localhost:9000'
           }
            }
       }

        stage('Docker Build') {
            steps {
                dir('D:/Jenkins-Home/workspace/Ultimate-CICD-Pipeline/java-maven-sonar-argocd-helm-k8s/spring-boot-app/') {
                script {
                    docker.build("priyankagiri123/ultimate-cicd-pipeline:${TAG}")
                }
            }
                
            }
        }
	    stage('Pushing Docker Image to Dockerhub') {
            steps {
                script {
                        docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
                        docker.image("priyankagiri123/ultimate-cicd-pipeline:${TAG}").push()
                        docker.image("priyankagiri123/ultimate-cicd-pipeline:${TAG}").push("latest")
                    }
                }
            }
        }

    }
}